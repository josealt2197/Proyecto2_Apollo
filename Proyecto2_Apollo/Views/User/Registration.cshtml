@model Proyecto2_Apollo.Models.User

@{
    ViewBag.Title = "Registration";
}

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />

<h2>Registro de Usuarios</h2>

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>¡Operación Completada! </strong>@ViewBag.Message
        </div>
    }
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <center>
            <div class="form-horizontal">
                <h4>Ingrese sus datos para crear una cuenta de usuario.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cédula" } })
                            @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("IDExist", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-1">
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombre" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Apellidos" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Teléfono" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-1">
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-1">
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Correo Electrónico" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contraseña", @maxlength = "11" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirmar Contraseña", @maxlength = "11" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-1">
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-1">
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <select name="country" id="country" class="class-direccion-register">
                                <option selected>Seleccione su Provincia</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <select name="state" id="state" class="class-direccion-register">
                                <option selected>Seleccione su Cantón</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <select name="city" id="city" class="class-direccion-register">
                                <option selected>Seleccione su Distrito</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-1">
                    </div>
                </div>

                @*<div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control class-direccion", @placeholder = "Dirección" } })
                            @Html.TextAreaFor(model => model.Address, new { placeholder = "Dirección", cols = "50", rows = "5", @class = "form-control class-direccion", style = "resize: none; font-family:'Helvetica'" })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>*@

                <div class="form-group">
                    <div class="col-md-12">
                        <input class="btn btn-primary" type="submit" value="Registrar cuenta." />
                    </div>
                </div>
            </div>
        </center>

        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Se ha producido un error. </strong>@ViewBag.Message
            </div>
        }
    }

}

<div class="enlace">
    @Html.ActionLink("Regresar al inicio", "Login", "User")
</div>

@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>

        $(document).ready(function () {

            load_json_data('country');

            function load_json_data(id, parent_id) {
                var html_code = '';
                $.getJSON('../Models/Places.json', function (data) {

                    html_code += '<option value="">Seleccione</option>';
                    $.each(data, function (key, value) {
                        if (id == 'country') {
                            if (value.parent_id == '0') {
                                html_code += '<option value="' + value.id + '">' + value.name + '</option>';
                            }
                        }
                        else {
                            if (value.parent_id == parent_id) {
                                html_code += '<option value="' + value.id + '">' + value.name + '</option>';
                            }
                        }
                    });
                    $('#' + id).html(html_code);
                });

            }

            $(document).on('change', '#country', function () {
                var country_id = $(this).val();
                if (country_id != '') {
                    load_json_data('state', country_id);
                }
                else {
                    $('#state').html('<option value="">Cantón</option>');
                    $('#city').html('<option value="">Distrito</option>');
                }
            });
            $(document).on('change', '#state', function () {
                var state_id = $(this).val();
                if (state_id != '') {
                    load_json_data('city', state_id);
                }
                else {
                    $('#city').html('<option value="">Distrito</option>');
                }
            });
        });
    </script>

}
