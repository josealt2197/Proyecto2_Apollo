@model Proyecto2_Apollo.Models.User

@{
    ViewBag.Title = "Registration";
}

<h2>Registro de Usuarios</h2>

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>¡Operacion Completada! </strong>@ViewBag.Message
        </div>
    }
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <center>
            <div class="form-horizontal">
                <h4>Ingrese sus datos para crear una cuenta de usuario.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @*@Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cédula" } })
                        @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("IDExist", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombre" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Apellidos" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Correo Electrónico" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Teléfono" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Dirección" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contraseña" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirmar Contraseña" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        <input class="btn btn-primary" type="submit" value="Registrar cuenta." class="btn btn-default" />
                    </div>
                </div>
            </div>
        </center>

        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Se ha producido un error. </strong>@ViewBag.Message
            </div>
        }
    }

}

<div class="enlace">
    @Html.ActionLink("Regresar al inicio", "Login", "User")
</div>

@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

