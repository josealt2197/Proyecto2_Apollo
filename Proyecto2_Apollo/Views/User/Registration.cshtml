@model Proyecto2_Apollo.Models.User

@{
    ViewBag.Title = "Registration";
}

<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />

<h2>Registro de Usuarios</h2>

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>¡Operación Completada! </strong>@ViewBag.Message
        </div>
    }
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <center>
            <div class="form-horizontal">
                <h4>Ingrese sus datos para crear una cuenta de usuario.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cédula" } })
                            @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("IDExist", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-1">
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombre" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Apellidos" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Teléfono" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-1">
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-1">
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Correo Electrónico" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contraseña", @maxlength = "11" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirmar Contraseña", @maxlength = "11" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-1">
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-1">
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.DropDownListFor(model => model.Province, new SelectList(Enumerable.Empty<SelectListItem>()), "Elige una provincia", new { @class = "class-direccion-register" })
                            @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                           @Html.DropDownListFor(model => model.Section, new SelectList(Enumerable.Empty<SelectListItem>()), "Elige un cantón", new { @class = "class-direccion-register" })
                           @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.DropDownListFor(model => model.District, new SelectList(Enumerable.Empty<SelectListItem>()), "Elige un distrito", new { @class = "class-direccion-register" })
                            @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-1">
                    </div>
                </div>

                @*<div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control class-direccion", @placeholder = "Dirección" } })
                            @Html.TextAreaFor(model => model.Address, new { placeholder = "Dirección", cols = "50", rows = "5", @class = "form-control class-direccion", style = "resize: none; font-family:'Helvetica'" })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>*@

                <div class="form-group">
                    <div class="col-md-12">
                        <input class="btn btn-primary" type="submit" value="Registrar cuenta." />
                    </div>
                </div>
            </div>
        </center>

        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Se ha producido un error. </strong>@ViewBag.Message
            </div>
        }
    }

}

<div class="enlace">
    @Html.ActionLink("Regresar al inicio", "Login", "User")
</div>

@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
            $(document).ready(function () {

                load_json_data('Province');

                function load_json_data(id, parent_id) {
                    var html_code = '';
                    $.getJSON('../Models/Places.json', function (data) {

                        html_code += '<option value="">Seleccione</option>';
                        $.each(data, function (key, value) {
                            if (id == 'Province') {
                                if (value.parent_id == '0') {
                                    html_code += '<option value="' + value.id + '">' + value.name + '</option>';
                                }
                            }
                            else {
                                if (value.parent_id == parent_id) {
                                    html_code += '<option value="' + value.id + '">' + value.name + '</option>';
                                }
                            }
                        });
                        $('#' + id).html(html_code);
                    });

                }

                $(document).on('change', '#Province', function () {
                    var country_id = $(this).val();
                    if (country_id != '') {
                        load_json_data('Section', country_id);
                    }
                    else {
                        $('#Section').html('<option value="">Cantón</option>');
                        $('#District').html('<option value="">Distrito</option>');
                    }
                });
                $(document).on('change', '#Section', function () {
                    var state_id = $(this).val();
                    if (state_id != '') {
                        load_json_data('District', state_id);
                    }
                    else {
                        $('#District').html('<option value="">Distrito</option>');
                    }
                });
            });
</script>


}
